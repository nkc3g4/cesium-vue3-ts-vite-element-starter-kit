define(["./when-4bbc8319","./Transforms-8b90e17c","./Matrix2-265d9610","./RuntimeError-5b082e8f","./ComponentDatatype-aad54330","./FrustumGeometry-a0a0f5aa","./GeometryAttribute-4bcb785f","./GeometryAttributes-7827a6c2","./combine-e9466e32","./WebGLConstants-508b9636","./Plane-616c9c0a","./VertexFormat-07539138"],(function(e,t,r,n,a,i,o,u,c,s,p,m){"use strict";function h(a){n.Check.typeOf.object("options",a),n.Check.typeOf.object("options.frustum",a.frustum),n.Check.typeOf.object("options.origin",a.origin),n.Check.typeOf.object("options.orientation",a.orientation);const o=a.frustum,u=a.orientation,c=a.origin,s=e.defaultValue(a._drawNearPlane,!0);let p,m;o instanceof i.PerspectiveFrustum?(p=0,m=i.PerspectiveFrustum.packedLength):o instanceof i.OrthographicFrustum&&(p=1,m=i.OrthographicFrustum.packedLength),this._frustumType=p,this._frustum=o.clone(),this._origin=r.Cartesian3.clone(c),this._orientation=t.Quaternion.clone(u),this._drawNearPlane=s,this._workerName="createFrustumOutlineGeometry",this.packedLength=2+m+r.Cartesian3.packedLength+t.Quaternion.packedLength}h.pack=function(a,o,u){n.Check.typeOf.object("value",a),n.Check.defined("array",o),u=e.defaultValue(u,0);const c=a._frustumType,s=a._frustum;return o[u++]=c,0===c?(i.PerspectiveFrustum.pack(s,o,u),u+=i.PerspectiveFrustum.packedLength):(i.OrthographicFrustum.pack(s,o,u),u+=i.OrthographicFrustum.packedLength),r.Cartesian3.pack(a._origin,o,u),u+=r.Cartesian3.packedLength,t.Quaternion.pack(a._orientation,o,u),o[u+=t.Quaternion.packedLength]=a._drawNearPlane?1:0,o};const f=new i.PerspectiveFrustum,d=new i.OrthographicFrustum,k=new t.Quaternion,g=new r.Cartesian3;return h.unpack=function(a,o,u){n.Check.defined("array",a),o=e.defaultValue(o,0);const c=a[o++];let s;0===c?(s=i.PerspectiveFrustum.unpack(a,o,f),o+=i.PerspectiveFrustum.packedLength):(s=i.OrthographicFrustum.unpack(a,o,d),o+=i.OrthographicFrustum.packedLength);const p=r.Cartesian3.unpack(a,o,g);o+=r.Cartesian3.packedLength;const m=t.Quaternion.unpack(a,o,k),y=1===a[o+=t.Quaternion.packedLength];if(!e.defined(u))return new h({frustum:s,origin:p,orientation:m,_drawNearPlane:y});const l=c===u._frustumType?u._frustum:void 0;return u._frustum=s.clone(l),u._frustumType=c,u._origin=r.Cartesian3.clone(p,u._origin),u._orientation=t.Quaternion.clone(m,u._orientation),u._drawNearPlane=y,u},h.createGeometry=function(e){const r=e._frustumType,n=e._frustum,c=e._origin,s=e._orientation,p=e._drawNearPlane,m=new Float64Array(24);i.FrustumGeometry._computeNearFarPlanes(c,s,r,n,m);const h=new u.GeometryAttributes({position:new o.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:m})});let f,d;const k=p?2:1,g=new Uint16Array(8*(k+1));let y=p?0:1;for(;y<2;++y)f=p?8*y:0,d=4*y,g[f]=d,g[f+1]=d+1,g[f+2]=d+1,g[f+3]=d+2,g[f+4]=d+2,g[f+5]=d+3,g[f+6]=d+3,g[f+7]=d;for(y=0;y<2;++y)f=8*(k+y),d=4*y,g[f]=d,g[f+1]=d+4,g[f+2]=d+1,g[f+3]=d+5,g[f+4]=d+2,g[f+5]=d+6,g[f+6]=d+3,g[f+7]=d+7;return new o.Geometry({attributes:h,indices:g,primitiveType:o.PrimitiveType.LINES,boundingSphere:t.BoundingSphere.fromVertices(m)})},function(t,r){return e.defined(r)&&(t=h.unpack(t,r)),h.createGeometry(t)}}));
//# sourceMappingURL=createFrustumOutlineGeometry.js.map
