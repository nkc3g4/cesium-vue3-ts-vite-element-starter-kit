define(["./arrayRemoveDuplicates-65de6756","./Transforms-8b90e17c","./Matrix2-265d9610","./RuntimeError-5b082e8f","./ComponentDatatype-aad54330","./CoplanarPolygonGeometryLibrary-b973f66f","./when-4bbc8319","./GeometryAttribute-4bcb785f","./GeometryAttributes-7827a6c2","./GeometryInstance-d57564f8","./GeometryPipeline-e93f6439","./IndexDatatype-6739e544","./PolygonGeometryLibrary-e329b948","./combine-e9466e32","./WebGLConstants-508b9636","./OrientedBoundingBox-1e433348","./EllipsoidTangentPlane-f1a69a20","./AxisAlignedBoundingBox-2a0ca7ef","./IntersectionTests-596e31ec","./Plane-616c9c0a","./AttributeCompression-442278a0","./EncodedCartesian3-da8f96bc","./ArcType-fc72c06c","./EllipsoidRhumbLine-d09d563f","./PolygonPipeline-5fd67ae2"],(function(e,t,n,o,r,i,a,c,y,s,l,p,u,d,f,m,g,h,b,P,G,C,k,L,T){"use strict";function E(e){const t=e.length,n=new Float64Array(3*t),o=p.IndexDatatype.createTypedArray(t,2*t);let i=0,a=0;for(let r=0;r<t;r++){const c=e[r];n[i++]=c.x,n[i++]=c.y,n[i++]=c.z,o[a++]=r,o[a++]=(r+1)%t}const s=new y.GeometryAttributes({position:new c.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new c.Geometry({attributes:s,indices:o,primitiveType:c.PrimitiveType.LINES})}function H(e){const t=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;o.Check.defined("options.polygonHierarchy",t),this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}H.fromPositions=function(e){e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT),o.Check.defined("options.positions",e.positions);return new H({polygonHierarchy:{positions:e.positions}})},H.pack=function(e,t,n){return o.Check.typeOf.object("value",e),o.Check.defined("array",t),n=a.defaultValue(n,0),t[n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,n)]=e.packedLength,t};const A={polygonHierarchy:{}};return H.unpack=function(e,t,n){o.Check.defined("array",e),t=a.defaultValue(t,0);const r=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=r.startingIndex,delete r.startingIndex;const i=e[t];return a.defined(n)||(n=new H(A)),n._polygonHierarchy=r,n.packedLength=i,n},H.createGeometry=function(o){const r=o._polygonHierarchy;let a=r.positions;if(a=e.arrayRemoveDuplicates(a,n.Cartesian3.equalsEpsilon,!0),a.length<3)return;if(!i.CoplanarPolygonGeometryLibrary.validOutline(a))return;const y=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(r,!1);if(0===y.length)return;const p=[];for(let e=0;e<y.length;e++){const t=new s.GeometryInstance({geometry:E(y[e])});p.push(t)}const d=l.GeometryPipeline.combineInstances(p)[0],f=t.BoundingSphere.fromPoints(r.positions);return new c.Geometry({attributes:d.attributes,indices:d.indices,primitiveType:d.primitiveType,boundingSphere:f})},function(e,t){return a.defined(t)&&(e=H.unpack(e,t)),e._ellipsoid=n.Ellipsoid.clone(e._ellipsoid),H.createGeometry(e)}}));
//# sourceMappingURL=createCoplanarPolygonOutlineGeometry.js.map
